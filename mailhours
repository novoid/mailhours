#!/bin/sh
## Latest change: Fri Jul 31 12:12:18 CEST 2009
## ===================================================
## purpose: analyze MAILDIR-emails of communications 
##          partners to know, at what hours they usually
##          send their emails
##
## author:  Karl Voit <shellscript@Karl-Voit.at>
##
## help:    start this script without an argument to
##          see the help information
## ===================================================

## NOTE: following lines can be overruled by the
##       userconfig-file (see helpscreen)
##       To create this userconfig, you can take those
##       lines as a template:
## BEGIN config vvvvvvvvvvvvvvvvvvvv

## view the result with this command
VIEWPROGRAM=geeqie

## if par2 is missing, this is the default Maildir directory
DEFAULTDIR="${HOME}/Maildir/.tmp/cur"

## END config ^^^^^^^^^^^^^^^^^^^^^^

### =====================================================
###   do not modify below this line
###   (unless you know, what you are doing)
### =====================================================

## get the filename of this script (do not modify!)
FILENAME=`basename $0`

USERCONFIGFILE="${HOME}/.config/${FILENAME}rc"

## override userconfig of this file above with userconfig
## from ${HOME}/.config/
if [ -f ${USERCONFIGFILE} ]; then
        . ${USERCONFIGFILE}
fi

## what to search for in From-line:
QUERYSTRING="${1}"

## temporary file for results (will be deleted at the end)
TEMPFILEHOURS=`mktemp`"_hours_${FILENAME}_${HOSTNAME}_${QUERYSTRING}"
TEMPFILEDAYSRAW=`mktemp`"_daysraw_${FILENAME}_${HOSTNAME}_${QUERYSTRING}"
TEMPFILEDAYSSORT=`mktemp`"_dayssorted_${FILENAME}_${HOSTNAME}_${QUERYSTRING}"

## how many hour-values should be expected to give a reasonable graph:
THRESHOLD=3

## *optional* parameter 3:
tmpDESCRIPTION="${3}"
if [ "${tmpDESCRIPTION}x" = "x" ]; then
        FILEDESCRIPTION=""
        PLOTDESCRIPTION=""
else
        FILEDESCRIPTION="_-_${tmpDESCRIPTION}"
        PLOTDESCRIPTION=" - ${tmpDESCRIPTION}"
fi


## format of the output graph file
OUTPUTFILE=`date +%Y-%m-%d`"_mailhours_${HOSTNAME}_-_${QUERYSTRING}${FILEDESCRIPTION}.png"


print_usage_and_exit()
{
        echo
        echo "${FILENAME}: no querystring found, displaying helpscreen"
        echo
        echo "syntax:  ${FILENAME} QUERYSTRING [DIRECTORY] [DESCRIPTION]"
        echo
        echo "${FILENAME} searches for emails in ${DEFAULTDIR}"
        echo "or [DIRECTORY] with QUERYSTRING in the From-lines."
        echo "A graph will be generated that shows at what hours"
        echo "the correspondent emails from this querystring"
        echo "were sent."
        echo "Then you know when this person is typically sending"
        echo "email answers."
        echo
        echo "Configuration is done in the files:"
        echo "   ${0}"
        echo "                  ... general defaults"
        echo "   ${USERCONFIGFILE}"
        echo "                  ... to override general defaults"
        echo
        echo "examples:"
        echo "     ${FILENAME} Torvalds"
        echo "         ... generates a graph when Linux Torvalds"
        echo "             sends emails in my DEFAULTDIR folder"
        echo "     ${FILENAME} Gates ~/Maildir/.spam/cur"
        echo "         ... generates a graph when Bill Gates"
        echo "             sends his emails that are stored in"
        echo "             the folder ~/Maildir/.spam/cur"
        echo
        exit 1
}

convert_day_of_week_format()
{
    grep "Mon" "${TEMPFILEDAYSRAW}" | sed 's#Mon#1#' > ${TEMPFILEDAYSSORT}
    grep "Tue" "${TEMPFILEDAYSRAW}" | sed 's#Tue#2#' >> ${TEMPFILEDAYSSORT}
    grep "Wed" "${TEMPFILEDAYSRAW}" | sed 's#Wed#3#' >> ${TEMPFILEDAYSSORT}
    grep "Thu" "${TEMPFILEDAYSRAW}" | sed 's#Thu#4#' >> ${TEMPFILEDAYSSORT}
    grep "Fri" "${TEMPFILEDAYSRAW}" | sed 's#Fri#5#' >> ${TEMPFILEDAYSSORT}
    grep "Sat" "${TEMPFILEDAYSRAW}" | sed 's#Sat#6#' >> ${TEMPFILEDAYSSORT}
    grep "Sun" "${TEMPFILEDAYSRAW}" | sed 's#Sun#7#' >> ${TEMPFILEDAYSSORT}
    ## in order to get the last horizontal line drawn:
    grep "Sun" "${TEMPFILEDAYSRAW}" | sed 's#Sun#8#' >> ${TEMPFILEDAYSSORT}
}

grep_for_hours()
{
    for file in `egrep -l "From:.*${QUERYSTRING}" ${MAILDIR}/*`
    do head -n 100 $file | \
	egrep "^Date: "; done | \
	awk '{ print $6 }' | \
	sed 's/:.*//' | \
	sort -n | \
	uniq -c > ${TEMPFILEHOURS}

}

grep_for_days_of_week()
{
    for file in `egrep -l "From:.*${QUERYSTRING}" ${MAILDIR}/*`
    do head -n 100 $file | \
	egrep "^Date: "; done | \
	awk '{ print substr($2,1,3) }' | \
	sed 's/:.*//' | \
	sort -n | \
	uniq -c > ${TEMPFILEDAYSRAW}
}

plot_graphics()
{
    echo "set term png size 800,800
    set output \"${OUTPUTFILE}\"
    set multiplot title \"${QUERYSTRING}${PLOTDESCRIPTION}\" layout 2,1
    set size ratio 0.4
    set title \"hours\"
    set yrange [0:24]
    set xlabel \"hours of the day (0-24h)\"
    set ylabel \"number of emails\"
    set autoscale y
    plot \"${TEMPFILEHOURS}\" using 2:1 with steps notitle 
    set size ratio 0.4
    set xrange [1:8]
    set yrange [0:]
    set title \"days\"
    set xlabel \"days of week (Mon-Sun)\"
    set ylabel \"number of emails\"
    plot \"${TEMPFILEDAYSSORT}\" using 2:1 with steps notitle" | gnuplot
}

remove_tempfiles()
{
    rm ${TEMPFILEHOURS}
    rm ${TEMPFILEDAYSRAW}
    rm ${TEMPFILEDAYSSORT}
}

echo_tempfiles()
{
    echo "DEBUG: TEMPFILEHOURS:    ${TEMPFILEHOURS}"
    echo "DEBUG: TEMPFILEDAYSRAW:  ${TEMPFILEDAYSRAW}"
    echo "DEBUG: TEMPFILEDAYSSORT: ${TEMPFILEDAYSSORT}"
}

[ "${QUERYSTRING}x" = "x" ] && print_usage_and_exit


## *optional* parameter 2 overrides default maildir folder:
MAILDIR="${2}"

if [ "${MAILDIR}x" = "x" ]; then
        MAILDIR="${DEFAULTDIR}"
fi

grep_for_hours
grep_for_days_of_week

NUMOFLINES=`wc -l ${TEMPFILEHOURS}|awk '{ print $1 }'`

if [ ${NUMOFLINES} -lt ${THRESHOLD} ]; then
    echo "too few samples found. Found ${NUMOFLINES} but need at least ${THRESHOLD}."
    exit 2
else
    convert_day_of_week_format
    plot_graphics
fi

if [ ! -f ${OUTPUTFILE} ]; then
        echo "Error: something went wrong, outputfile is missing"
        echo "Please check previous output."
        exit 3
fi

echo "results for hours can be found in: ${OUTPUTFILE}"

echo_tempfiles

${VIEWPROGRAM} ${OUTPUTFILE}

remove_tempfiles

#end
